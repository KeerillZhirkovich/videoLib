package view;

import java.awt.event.KeyEvent;
import static java.util.Objects.isNull;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static jdk.nashorn.internal.objects.NativeString.trim;
import model.Client;
import model.Disc;
import static controller.Controller.*;
import java.io.File;
import javax.swing.JFileChooser;

public class MainForm extends javax.swing.JFrame {

    /**
     * Creates new form MainForm
     */
    private int selectDisc;
    private int selectClient;

    public MainForm() {
        initComponents();
        clientF.setText("");

//        try
//        {
        if (getDiscs().isEmpty()) {
            setDiscFieldsEnable(false);
        } else {
            ShowDiscsList();
            jTable1.setRowSelectionInterval(0, 0);
            ShowDiscFields();
        }

        if (getClients().isEmpty()) {
            setClientFieldsEnable(false);
        } else {
            ShowClientsList();
            jTable2.setRowSelectionInterval(0, 0);
            ShowClientFields();
        }

        jTable1.requestFocus();
//        } catch (IOException ex) {
//            blockForms();
//        }
        jDesktopPane1.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField5 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        origTittleF = new javax.swing.JTextField();
        russTittleF = new javax.swing.JTextField();
        directorF = new javax.swing.JTextField();
        genreF = new javax.swing.JTextField();
        durationF = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        releaseyearF = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        ratingF = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        langF = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        countryF = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        descriptionF = new javax.swing.JTextPane();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        actorsF = new javax.swing.JTextPane();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        clientF = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        searchF = new javax.swing.JTextField();
        jButton9 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        clientSurnameF = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        clientPhoneF = new javax.swing.JTextField();
        clientNameF = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        openBase = new javax.swing.JMenuItem();
        openOfficeMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Видеотека");
        setResizable(false);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID диска", "Название фильма"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable1MouseReleased(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(10);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(60);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(60);
        }

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Название:");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Русское название:");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Режиссёр(ы):");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Жанр:");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Длительность:");

        origTittleF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                origTittleFKeyReleased(evt);
            }
        });

        russTittleF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                russTittleFKeyReleased(evt);
            }
        });

        directorF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                directorFKeyReleased(evt);
            }
        });

        genreF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                genreFKeyReleased(evt);
            }
        });

        durationF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                durationFKeyReleased(evt);
            }
        });

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Год выхода:");

        releaseyearF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                releaseyearFKeyReleased(evt);
            }
        });

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Рейтинг IMDb:");

        ratingF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ratingFKeyReleased(evt);
            }
        });

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Языки:");

        langF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                langFKeyReleased(evt);
            }
        });

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Страна:");

        countryF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                countryFKeyReleased(evt);
            }
        });

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("В гланых ролях:");

        descriptionF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                descriptionFMousePressed(evt);
            }
        });
        descriptionF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                descriptionFKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                descriptionFKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(descriptionF);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 82, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 110, Short.MAX_VALUE)
        );

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("мин");

        actorsF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                actorsFKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                actorsFKeyReleased(evt);
            }
        });
        jScrollPane3.setViewportView(actorsF);

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Описание фильма:");

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("Диск на руках у:");

        jButton8.setText("Диск сдан");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        clientF.setText("client");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(jLabel13))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel11)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clientF, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(durationF, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel12)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(releaseyearF, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ratingF, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(origTittleF, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(russTittleF, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(directorF, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(genreF, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(264, 264, 264)
                                .addComponent(countryF, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 454, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(langF, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel9)
                                        .addGap(202, 202, 202))
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 454, Short.MAX_VALUE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(origTittleF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(russTittleF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(directorF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(genreF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ratingF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(releaseyearF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(durationF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel12)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(countryF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(langF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(69, 69, 69)
                        .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jButton8)
                    .addComponent(clientF))
                .addContainerGap())
        );

        jButton1.setText("Добавить диск");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("Удалить диск");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Сохранить в файл");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        searchF.setText("Введите ключевые слова");
        searchF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchFMouseClicked(evt);
            }
        });

        jButton9.setText("Поиск");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jTable2.setAutoCreateRowSorter(true);
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID клиента", "Имя", "Фамилия", "Телефон"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable2MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable2MouseReleased(evt);
            }
        });
        jTable2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable2KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable2KeyReleased(evt);
            }
        });
        jScrollPane4.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setMinWidth(10);
            jTable2.getColumnModel().getColumn(0).setPreferredWidth(75);
            jTable2.getColumnModel().getColumn(0).setMaxWidth(75);
            jTable2.getColumnModel().getColumn(1).setMinWidth(40);
            jTable2.getColumnModel().getColumn(2).setMinWidth(80);
        }

        jButton2.setText("Добавить клиента");

        jButton5.setText("Добавить клиента");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Удалить клиента");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton10.setText("Выдать диск");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jLabel14.setText("Имя:");

        jLabel15.setText("Фамилия:");

        clientSurnameF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                clientSurnameFKeyReleased(evt);
            }
        });

        jLabel16.setText("Телефон:");

        clientPhoneF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                clientPhoneFKeyReleased(evt);
            }
        });

        clientNameF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                clientNameFKeyReleased(evt);
            }
        });

        jMenu1.setText("Файл");

        openBase.setText("Открыть базу");
        openBase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openBaseActionPerformed(evt);
            }
        });
        jMenu1.add(openBase);

        openOfficeMenuItem.setText("Слияние баз");
        openOfficeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openOfficeMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(openOfficeMenuItem);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(589, 589, 589))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(searchF, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel16)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(clientSurnameF, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clientPhoneF, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(clientNameF, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 601, Short.MAX_VALUE)
                    .addComponent(jButton2)
                    .addGap(0, 601, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(clientNameF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(clientSurnameF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(clientPhoneF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton5)
                            .addComponent(jButton6)
                            .addComponent(jButton10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(searchF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton9))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton3))
                        .addGap(27, 27, 27))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jButton2)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents


    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        /*try {
            daoDiscs.saveChanges();
            daoClients.saveChanges();
            JOptionPane.showMessageDialog(this, "Успешно сохранено.");
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Сохранение не удалось.");
        }*/
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int x = jTable1.getSelectedRow();
        if (x != -1) {
            deleteDisc((int) jTable1.getValueAt(x, 0));
            ClearDiscFields();
            ClearDiscsList();
            ShowDiscsList();
        }
        if (getDiscs().isEmpty()) {
            setDiscFieldsEnable(false);
        } else if (x != 0) {
            jTable1.setRowSelectionInterval(x - 1, x - 1);
            ShowDiscFields();
            jTable1.setRowSelectionInterval(x - 1, x - 1);
        } else {
            jTable1.setRowSelectionInterval(0, 0);
            ShowDiscFields();
            jTable1.setRowSelectionInterval(0, 0);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ClearDiscFields();
        Disc disc = new Disc();
        disc.setRussianTitle("");
        setDisc(disc);
        ShowDiscsList();
        jTable1.setRowSelectionInterval(jTable1.getRowCount() - 1, jTable1.getRowCount() - 1);
        selectDisc = jTable1.getSelectedRow();
        ShowDiscFields();
        setDiscFieldsEnable(true);
        //jTable1.setRowSelectionInterval(jTable1.getRowCount()-1, jTable1.getRowCount()-1);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        int x = jTable1.getSelectedRow();
        if (x != -1) {
            setClient(getDisc((int) jTable1.getValueAt(x, 0)).getDiskID(), 0);
            clientF.setText("Диск не на руках");
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        ClearDiscFields();
        ClearDiscsList();
        Search(searchF.getText());
        ShowDiscsList();
        jTable1.setRowSelectionInterval(0, 0);
        if ("".equals(searchF.getText())) {
            searchF.setText("Введите ключевые слова");
        }
        ShowDiscFields();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void searchFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchFMouseClicked
        if ("Введите ключевые слова".equals(searchF.getText())) {
            searchF.setText("");
        }
    }//GEN-LAST:event_searchFMouseClicked

    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        jTable1.getRowSorter().setSortKeys(null);
        if (evt.getKeyChar() == KeyEvent.VK_ENTER || evt.getKeyChar() == KeyEvent.VK_UP || evt.getKeyChar() == KeyEvent.VK_DOWN) {
            selectDisc = jTable1.getSelectedRow();
        }
        ShowDiscFields();
    }//GEN-LAST:event_jTable1KeyReleased

    private void origTittleFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_origTittleFKeyReleased
        if (evt.getKeyChar() == KeyEvent.VK_TAB) {
            descriptionF.setText(trim(descriptionF.getText()));
        } else {
            try {
                getDisc((int) jTable1.getValueAt(jTable1.getSelectedRow(), 0)).setOriginalTitle(trim(origTittleF.getText()));
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_origTittleFKeyReleased

    private void russTittleFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_russTittleFKeyReleased
        try {
            getDisc((int) jTable1.getValueAt(jTable1.getSelectedRow(), 0)).setRussianTitle(trim(russTittleF.getText()));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_russTittleFKeyReleased

    private void directorFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_directorFKeyReleased
        try {
            getDisc((int) jTable1.getValueAt(jTable1.getSelectedRow(), 0)).setDirector(trim(directorF.getText()));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_directorFKeyReleased

    private void genreFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_genreFKeyReleased
        try {
            getDisc((int) jTable1.getValueAt(jTable1.getSelectedRow(), 0)).setGenre(trim(genreF.getText()));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_genreFKeyReleased

    private void durationFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_durationFKeyReleased
        try {
            getDisc((int) jTable1.getValueAt(jTable1.getSelectedRow(), 0)).setDuration(Integer.parseInt(trim(durationF.getText())));
        } catch (NumberFormatException e) {
            getDisc((int) jTable1.getValueAt(jTable1.getSelectedRow(), 0)).setDuration(0);
        }
    }//GEN-LAST:event_durationFKeyReleased

    private void releaseyearFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_releaseyearFKeyReleased
        try {
            getDisc((int) jTable1.getValueAt(jTable1.getSelectedRow(), 0)).setReleaseYear(Short.parseShort(trim(releaseyearF.getText())));
        } catch (NumberFormatException e) {
            getDisc((int) jTable1.getValueAt(jTable1.getSelectedRow(), 0)).setReleaseYear((short) 0);
        }
    }//GEN-LAST:event_releaseyearFKeyReleased

    private void ratingFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ratingFKeyReleased
        try {
            getDisc((int) jTable1.getValueAt(jTable1.getSelectedRow(), 0)).setRating(Double.parseDouble(trim(ratingF.getText())));
        } catch (NumberFormatException e) {
            getDisc((int) jTable1.getValueAt(jTable1.getSelectedRow(), 0)).setRating(0);
        }
    }//GEN-LAST:event_ratingFKeyReleased

    private void langFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_langFKeyReleased
        try {
            getDisc((int) jTable1.getValueAt(jTable1.getSelectedRow(), 0)).setLanguages(trim(langF.getText()));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_langFKeyReleased

    private void countryFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_countryFKeyReleased
        try {
            getDisc((int) jTable1.getValueAt(jTable1.getSelectedRow(), 0)).setCountry(trim(countryF.getText()));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_countryFKeyReleased

    private void actorsFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_actorsFKeyReleased
        try {
            getDisc((int) jTable1.getValueAt(jTable1.getSelectedRow(), 0)).setActors(trim(actorsF.getText()));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_actorsFKeyReleased

    private void descriptionFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_descriptionFKeyReleased
        if (evt.getKeyChar() == KeyEvent.VK_TAB) {
            actorsF.setText(trim(actorsF.getText()));
            //origTittleF.requestFocus();
            descriptionF.setText(trim(descriptionF.getText()));
        } else {
            try {
                getDisc((int) jTable1.getValueAt(jTable1.getSelectedRow(), 0)).setDescription(trim(descriptionF.getText()));
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_descriptionFKeyReleased

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        if ("".equals(searchF.getText())) {
            searchF.setText("Введите ключевые слова");
        }
        jTable1.getRowSorter().setSortKeys(null);
        jTable2.getRowSorter().setSortKeys(null);
        ShowDiscsList();
        ShowClientsList();
    }//GEN-LAST:event_formMouseClicked

    private void jTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased
        jTable1.getRowSorter().setSortKeys(null);
        jTable1.setRowSelectionInterval(selectDisc, selectDisc);
    }//GEN-LAST:event_jTable1MouseReleased

    private void jTable1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MousePressed
        jTable1.getRowSorter().setSortKeys(null);
        selectDisc = jTable1.getSelectedRow();
        if (!isNull(jTable1.getValueAt(selectDisc, 0))) {
            ShowDiscFields();
        }
        ShowDiscsList();
        jTable1.setRowSelectionInterval(selectDisc, selectDisc);
    }//GEN-LAST:event_jTable1MousePressed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        int x = jTable2.getSelectedRow();
        if (x != -1) {
            deleteClient((int) jTable2.getValueAt(x, 0));
            clientNameF.setText("");
            clientSurnameF.setText("");
            clientPhoneF.setText("");
            ClearClientsList();
            ShowClientsList();
            ShowDiscFields();
        }
        if (getClients().isEmpty()) {
            setClientFieldsEnable(false);
        } else if (x != 0) {
            jTable2.setRowSelectionInterval(x - 1, x - 1);
            ShowClientFields();
            jTable2.setRowSelectionInterval(x - 1, x - 1);
        } else {
            jTable2.setRowSelectionInterval(0, 0);
            ShowClientFields();
            jTable2.setRowSelectionInterval(0, 0);
        }

    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        clientNameF.setText("");
        clientSurnameF.setText("");
        clientPhoneF.setText("");
        Client client = new Client();
        client.setName("");
        client.setSurname("");
        client.setPhone("");
        setClient(client);
        ShowClientsList();
        setClientFieldsEnable(true);
        jTable2.setRowSelectionInterval(jTable2.getRowCount() - 1, jTable2.getRowCount() - 1);
        selectClient = jTable2.getSelectedRow();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        int x = jTable1.getSelectedRow();
        int y = jTable2.getSelectedRow();
        if (x != -1 && y != -1) {
            setClient((int) jTable1.getValueAt(x, 0), (int) jTable2.getValueAt(y, 0));
            ShowDiscFields();
        } else {
            JOptionPane.showMessageDialog(this, "Вы не выбрали клиента");
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jTable2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MousePressed
        jTable2.getRowSorter().setSortKeys(null);
        selectClient = jTable2.getSelectedRow();
        if (!isNull(jTable2.getValueAt(selectClient, 0))) {
            ShowClientFields();
        }
        ShowClientsList();
        jTable2.setRowSelectionInterval(selectClient, selectClient);
        jTable2.requestFocus();
    }//GEN-LAST:event_jTable2MousePressed

    private void jTable2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseReleased
        jTable2.getRowSorter().setSortKeys(null);
        jTable2.setRowSelectionInterval(selectClient, selectClient);
    }//GEN-LAST:event_jTable2MouseReleased

    private void clientNameFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_clientNameFKeyReleased
        try {
            getClient((int) jTable2.getValueAt(selectClient, 0)).setName(trim(clientNameF.getText()));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_clientNameFKeyReleased

    private void clientSurnameFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_clientSurnameFKeyReleased
        try {
            getClient((int) jTable2.getValueAt(selectClient, 0)).setSurname(trim(clientSurnameF.getText()));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_clientSurnameFKeyReleased

    private void clientPhoneFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_clientPhoneFKeyReleased
        try {
            getClient((int) jTable2.getValueAt(selectClient, 0)).setPhone(trim(clientPhoneF.getText()));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_clientPhoneFKeyReleased

    private void jTable2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable2KeyReleased
        jTable2.getRowSorter().setSortKeys(null);
        if (evt.getKeyChar() == KeyEvent.VK_ENTER || evt.getKeyChar() == KeyEvent.VK_UP || evt.getKeyChar() == KeyEvent.VK_DOWN || evt.getKeyChar() == KeyEvent.VK_TAB) {
            selectClient = jTable2.getSelectedRow();
            ShowClientFields();
        }
    }//GEN-LAST:event_jTable2KeyReleased

    private void openBaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openBaseActionPerformed
        JFileChooser dialog = new JFileChooser();
        if (dialog.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File file = dialog.getSelectedFile();
            openBase();
        }
    }//GEN-LAST:event_openBaseActionPerformed

    private void openOfficeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openOfficeMenuItemActionPerformed
        JFileChooser dialog = new JFileChooser();
        if (dialog.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File file = dialog.getSelectedFile();
            mergeBase();
        }
    }//GEN-LAST:event_openOfficeMenuItemActionPerformed

    private void actorsFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_actorsFKeyPressed
        if (evt.getKeyChar() == KeyEvent.VK_TAB) {
            actorsF.setText(trim(actorsF.getText()));
            descriptionF.setText(trim(descriptionF.getText()));
            descriptionF.requestFocus();
        }
    }//GEN-LAST:event_actorsFKeyPressed

    private void descriptionFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_descriptionFKeyPressed
        if (evt.getKeyChar() == KeyEvent.VK_TAB) {
            actorsF.setText(trim(actorsF.getText()));
            descriptionF.setText(trim(descriptionF.getText()));
            origTittleF.requestFocus();
        }
    }//GEN-LAST:event_descriptionFKeyPressed

    private void descriptionFMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_descriptionFMousePressed
        int x = descriptionF.getCaretPosition();
        descriptionF.setText(trim(descriptionF.getText()));
        try {
            descriptionF.setCaretPosition(x);
        } catch (IllegalArgumentException e) {

        }
    }//GEN-LAST:event_descriptionFMousePressed

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
        jTable1.getRowSorter().setSortKeys(null);
        if (evt.getKeyChar() == KeyEvent.VK_ENTER || evt.getKeyChar() == KeyEvent.VK_UP || evt.getKeyChar() == KeyEvent.VK_DOWN || evt.getKeyChar() == KeyEvent.VK_TAB) {
            selectDisc = jTable1.getSelectedRow();
        }
        ShowDiscFields();
    }//GEN-LAST:event_jTable1KeyPressed

    private void jTable2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable2KeyPressed
        jTable2.getRowSorter().setSortKeys(null);
        if (evt.getKeyChar() == KeyEvent.VK_ENTER || evt.getKeyChar() == KeyEvent.VK_UP || evt.getKeyChar() == KeyEvent.VK_DOWN || evt.getKeyChar() == KeyEvent.VK_TAB) {
            selectClient = jTable2.getSelectedRow();
            ShowClientFields();
        }
    }//GEN-LAST:event_jTable2KeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane actorsF;
    private javax.swing.JLabel clientF;
    private javax.swing.JTextField clientNameF;
    private javax.swing.JTextField clientPhoneF;
    private javax.swing.JTextField clientSurnameF;
    private javax.swing.JTextField countryF;
    private javax.swing.JTextPane descriptionF;
    private javax.swing.JTextField directorF;
    private javax.swing.JTextField durationF;
    private javax.swing.JTextField genreF;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField langF;
    private javax.swing.JMenuItem openBase;
    private javax.swing.JMenuItem openOfficeMenuItem;
    private javax.swing.JTextField origTittleF;
    private javax.swing.JTextField ratingF;
    private javax.swing.JTextField releaseyearF;
    private javax.swing.JTextField russTittleF;
    private javax.swing.JTextField searchF;
    // End of variables declaration//GEN-END:variables

    private void ClearDiscFields() {
        origTittleF.setText("");
        russTittleF.setText("");
        directorF.setText("");
        genreF.setText("");
        durationF.setText("");
        releaseyearF.setText("");
        ratingF.setText("");
        langF.setText("");
        countryF.setText("");
        actorsF.setText("");
        descriptionF.setText("");
        clientF.setText("");
    }

    public void ClearClientFields() {
        clientNameF.setText("");
        clientSurnameF.setText("");
        clientPhoneF.setText("");
    }

    private void ClearDiscsList() {
        DefaultTableModel dm = (DefaultTableModel) jTable1.getModel();
        while (dm.getRowCount() > 0) {
            dm.removeRow(0);
        }
    }

    private void ShowDiscsList() {
        int x = jTable1.getSelectedRow();
        ClearDiscsList();
        jTable1 = ShowDiscs(jTable1);
        if (x >= 0) {
            jTable1.setRowSelectionInterval(x, x);
        }
    }

    public void ShowDiscFields() {
        int first = (int) jTable1.getValueAt(jTable1.getSelectedRow(), 0);
        if (first != 0) {
            Disc disc = getDiscByNumber(first);

            origTittleF.setText(disc.getOriginalTitle());
            russTittleF.setText(disc.getRussianTitle());
            directorF.setText(disc.getDirector());
            genreF.setText(disc.getGenre());
            durationF.setText(Integer.toString(disc.getDuration()));
            releaseyearF.setText(Short.toString(disc.getReleaseYear()));
            ratingF.setText(Double.toString(disc.getRating()));
            langF.setText(disc.getLanguages());
            countryF.setText(disc.getCountry());
            actorsF.setText(disc.getActors());
            descriptionF.setText(disc.getDescription());
            try {
                clientF.setText(getClient(disc.getClientID()).getName() + " " + getClient(disc.getClientID()).getSurname());
            } catch (Exception e) {
                disc.setClientID(0);
                clientF.setText("Диск не на руках");
            }

            if (getDiscs().isEmpty()) {
                setDiscFieldsEnable(false);
            }
            //            else
            //                jTable1.setRowSelectionInterval(0, 0);
        }
    }

    private void setDiscFieldsEnable(boolean flag) {
        origTittleF.setEnabled(flag);
        russTittleF.setEnabled(flag);
        directorF.setEnabled(flag);
        genreF.setEnabled(flag);
        durationF.setEnabled(flag);
        releaseyearF.setEnabled(flag);
        ratingF.setEnabled(flag);
        langF.setEnabled(flag);
        countryF.setEnabled(flag);
        actorsF.setEnabled(flag);
        descriptionF.setEnabled(flag);
    }

    private void ClearClientsList() {
        DefaultTableModel dm = (DefaultTableModel) jTable2.getModel();
        while (dm.getRowCount() > 0) {
            dm.removeRow(0);
        }
    }

    private void ShowClientsList() {
        int x = jTable2.getSelectedRow();
        ClearClientsList();
        jTable2 = ShowClients(jTable2);
        if (x >= 0) {
            jTable2.setRowSelectionInterval(x, x);
        }
    }

    private void ShowClientFields() {
        int first = (int) jTable2.getValueAt(jTable2.getSelectedRow(), 0);
        if (first != 0) {
            Client client = getClient(first);
            clientNameF.setText(client.getName());
            clientSurnameF.setText(client.getSurname());
            clientPhoneF.setText(client.getPhone());
        }

        if (getClients().isEmpty()) {
            setClientFieldsEnable(false);
        }
    }

    private void setClientFieldsEnable(boolean flag) {
        clientNameF.setEnabled(flag);
        clientSurnameF.setEnabled(flag);
        clientPhoneF.setEnabled(flag);
    }
}
